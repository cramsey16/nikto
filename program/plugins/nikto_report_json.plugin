###############################################################################
#  Copyright (C) 2025 Chris Sullo
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; version 2
#  of the License only.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to
#  Free Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
###############################################################################
# PURPOSE:
# JSON Reporting - Multi-host support
###############################################################################
our $JSONRPT_ALL = [];      # Arrayref to hold all hosts' reports
our $JSONRPT_CURR = undef;  # Scalarref to current host's report

use JSON;
use Time::Piece;
use Time::Seconds;

###############################################################################
sub nikto_report_json_init {
    use JSON;

    my $id = { name              => "report_json",
               full_name         => "JSON reports",
               author            => "Sullo",
               description       => "Produces a JSON report.",
               report_head       => \&json_open,
               report_host_start => \&json_host_start,
               report_host_end   => \&json_host_end,
               report_close      => \&json_close,
               report_item       => \&json_item,
               report_format     => 'json',
               copyright         => "2025 Chris Sullo"
               };
    return $id;
}

###############################################################################
# open output file
sub json_open {
    my ($file) = @_;

    # Open file
    open(OUT, "+>$file") || die "+ ERROR: Unable to open '$file' for write: $@\n";
    return OUT;
}

###############################################################################
# start output for a host
sub json_host_start {
    my ($handle, $mark) = @_;
    
    # Get current time with timezone
    my $current_time = localtime;
    my $start_time = $mark->{'start_time'} ? localtime($mark->{'start_time'}) : $current_time;
    
    $JSONRPT_CURR = {
        host           => $mark->{'vhost'} ? $mark->{'vhost'} : $mark->{'hostname'},
        ip             => $mark->{'ip'},
        port           => $mark->{'port'},
        server_banner  => $mark->{'banner'},
        start_time     => $start_time->strftime('%Y-%m-%d %H:%M:%S %z'),
        vulnerabilities => []
    };
    
    # Add current host report to the array of all hosts
    push @$JSONRPT_ALL, $JSONRPT_CURR;
    return;
}

###############################################################################
# end output for a host
sub json_host_end {
    my ($handle, $mark) = @_;
    my $end_time;
    
    if ($mark->{'end_time'} eq '') {
        $end_time = localtime;
    } else {
        $end_time = localtime($mark->{'end_time'});
    }
    
    $JSONRPT_CURR->{'end_time'} = $end_time->strftime('%Y-%m-%d %H:%M:%S %z');
    return;
}

###############################################################################
# close output file
sub json_close {
    my ($handle, $mark) = @_;
    my $json_encoder = JSON->new->utf8->canonical->pretty->convert_blessed;
    my $json_output = $json_encoder->encode($JSONRPT_ALL);
    print $handle $json_output;
    close($handle);
    return;
}

###############################################################################
# print an item
sub json_item {
    my ($handle, $mark, $item) = @_;

    my $uri = $item->{'uri'};
    if (($uri ne '') && ($mark->{'root'} ne '') && ($uri !~ /^$mark->{'root'}/)) {
        $uri = $mark->{'root'} . $uri;
    }

    my $msg = $item->{'message'};
    my $uri2 = quotemeta($uri);
    my $root = quotemeta($mark->{'root'});
    $msg =~ s/^$uri2:\s//;
    $msg =~ s/^$root$uri2:\s//;

    push @{$JSONRPT_CURR->{'vulnerabilities'}}, {
        id           => $item->{'nikto_id'},
        references   => $item->{'refs'},
        method       => $item->{'method'},
        url          => $uri,
        msg          => $msg
    };
}

1;
